# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2

jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.7.2-node-browsers
        environment:
          BUNDLER_VERSION: 2.1.4

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
    
      - image: circleci/mysql:5.7.24
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_DATABASE: omaps_test
      - image: circleci/postgres:latest
        environment:
          POSTGRES_USER: omaps
          POSTGRES_PASSWORD: omaps034d
          POSTGRES_DB: omaps_test
      
    working_directory: ~/repo

    steps:

      - checkout


      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Wait for DB
          # preinstalled in circleci/* docker image
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: install bundler
          command: |
            gem install bundler:2.1.4
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      #- run: bundle exec rake db:create RAILS_ENV=test
      #- run: bundle exec rake db:schema:load RAILS_ENV=test

      # run tests!
      # - run:
      #    name: run tests
      #    command: |
      #      mkdir /tmp/test-results
      #      TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
      #        circleci tests split --split-by=timings)"
#
      #      bundle exec rspec \
      #        --format progress \
      #        --format RspecJunitFormatter \
      #        --out /tmp/test-results/rspec.xml \
      #        --format progress \
      #        $TEST_FILES

      # collect reports
      #- store_test_results:
      #    path: /tmp/test-results
      #- store_artifacts:
      #    path: /tmp/test-results
      #    destination: test-results
  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
